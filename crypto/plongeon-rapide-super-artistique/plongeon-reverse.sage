from Crypto.Util.number import long_to_bytes

# ===========================
# Données issues de l'énoncé
# ===========================
D = 7
R = 32
nbit = 512

F = PolynomialRing(ZZ, "x")
x = F.gen()

N = 15193992477728078349*x^14 + 20849951573235599290*x^13 + 31626787439292941810*x^12 + 41606030540518542243*x^11 + 51135239778172914618*x^10 + 54839205054373601768*x^9 + 61504808736544546256*x^8 + 69077638236743212818*x^7 + 53980744540731499013*x^6 + 48344582546079800218*x^5 + 37874750456914975063*x^4 + 28415628763501783372*x^3 + 19286832846769454663*x^2 + 13073046561885731511*x + 7807279729190335309 
n = 108467639697839662757675119579277149084242308356218922071090918908615374948181781274150380885272044494446721088127180898926333391217444363867805503733024234462862873998737363236748030712385045260063783565046555205958369142785754700441856622886319553247371639123221105096296162808152357323029673800985543
c = 88755015861533943167974559872713361696099145214213848793491838241022886852405120609704167406295045592769591587483471982775519184576012814288576845480957257644075924651736974849836538134802852128574442137122106558275855261092222278387967861419587133198657052818619203674183040801840364877770834201106835

t = (nbit - R) // D

# ==============================================
# Déduction sur la plage de valeur possible de r
# ==============================================
r_min, r_max = 2^(t-1), 2^t-1
print(f"{r_min=}, {r_max=}")


# ==================
# Détermination de r
# ==================
r = r_min
for i in range(t-2, -1, -1):
    z = r + 2^i
    if (n - N(x=z)) >= 0:
        r = z
print(f"{r=}")

assert N(r) == n


# ===================================
# Détermination des coef RSA utilisés
# ===================================
# Fatorisation de N
P, Q = N.factor()
P, Q = P[0], Q[0]
print(f"{P=}")
print(f"{Q=}")
# Calcul de p, q, et d
p, q = P(r), Q(r)
e = 65537
phi = (p-1)*(q-1)
d = pow(e, -1, phi)

# ===================================
# Déchiffrement
# ===================================
m = pow(c, d, n)
flag = long_to_bytes(int(m))
print(f"{flag=}")
